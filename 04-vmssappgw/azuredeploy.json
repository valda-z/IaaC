{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vm":{
            "type": "string",
            "defaultValue": "app",
            "metadata": {
                "description": "VM name"
              }
          },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
              "description": "Size of vm"
            }
        },
        "vmcount": {
            "type": "int",
            "metadata": {
                "description": "How many VM we want to provision"
              }
        },
        "username": {
            "type": "string",
            "metadata": {
                "description": "VM user name"
              }
        },
        "sshkey":{
            "type": "string",
            "metadata": {
                "description": "VM users SSH public key"
              }
        },
        "postgrename":{
            "type": "string",
            "metadata": {
                "description": "PostgreSQL name"
              }
        },
        "postgreuser":{
            "type": "string",
            "metadata": {
                "description": "PostgreSQL username"
              }
        },
        "postgrepassword":{
            "type": "securestring",
            "metadata": {
                "description": "PostgreSQL password"
              }
        },
        "acrname":{
            "type": "string",
            "metadata": {
                "description": "ACR name"
              }
        },
        "acrkey":{
            "type": "string",
            "metadata": {
                "description": "ACR key"
              }
        },
        "acrimgspa":{
            "type": "string",
            "metadata": {
                "description": "container image name for SPA app"
              }
        },
        "acrimgtodo":{
            "type": "string",
            "metadata": {
                "description": "container image name for TODO app"
              }
        },
        "artifactsLocation":{
            "type": "string",
            "metadata": {
                "description": "Install script location"
              }
        },
        "appgwPFX":{
            "type": "string",
            "defaultValue": "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",
            "metadata": {
                "description": "SSL certificate - PFX file encoded in base64"
              }
        },
        "appgwPFXPassword":{
            "type": "string",
            "defaultValue": "pwd123...",
            "metadata": {
                "description": "SSL certificate password"
              }
        }
    },
    "variables": {
        "appgw": "[concat(concat(parameters('vm'),'-appgw'))]",
        "appgwIp": "[concat(concat(parameters('vm'),'-appgw-ip'))]",
        "vmNic": "[concat(concat(parameters('vm'),'-nic'))]",
        "vmNsg": "[concat(concat(parameters('vm'),'-nsg'))]",
        "vnetName": "vnet",
        "vnetAddressPrefix": "10.0.0.0/16",
        "subnetAppName": "app",
        "subnetAppPrefix": "10.0.10.0/24",
        "subnetAppGWName": "appgw",
        "subnetAppGWPrefix": "10.0.1.0/24",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('username'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('sshkey')]"
                    }
                ]
            }
        },
        "postgresDB": "todo",    
        "postgresSKU": {
            "name": "B_Gen5_1",
            "family": "Gen5",
            "capacity": "",
            "size": "5120",
            "tier":"Basic"
        },
        "postgresVersion": "9.6",
        "postgresurl": "[concat('jdbc:postgresql://',parameters('postgrename'),'.postgres.database.azure.com:5432/',variables('postgresDB'),'?user=',parameters('postgreuser'),'@',parameters('postgrename'),'&password=',parameters('postgrepassword'),'&sslmode=require')]"
    },
    "resources": [
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[parameters('location')]",
            "name": "[variables('vnetName')]",
            "properties": {
                "addressSpace":{
                    "addressPrefixes":[
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets":[
                    {
                        "name": "[variables('subnetAppName')]",
                        "properties":{
                            "addressPrefix": "[variables('subnetAppPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetAppGWName')]",
                        "properties":{
                            "addressPrefix": "[variables('subnetAppGWPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('appgwIp')]",
            "sku":{
                "name": "Standard"
            },
            "location": "[parameters('location')]",
            "properties": {
              "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "name": "[variables('appgw')]",
            "type": "Microsoft.Network/applicationGateways",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('appgwIp'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties":{
                "sku":{
                    "tier":"Standard_v2",
                    "name":"Standard_v2"
                },
                "autoscaleConfiguration":{
                    "minCapacity": 2,
                    "maxCapacity": 4
                },
                "gatewayIPConfigurations":[
                    {
                        "name": "appGwConfig",
                        "properties":{
                            "subnet":{
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetAppGWName'))]"                            
                            }
                        }
                    }
                ],
                "backendAddressPools":[
                    {
                        "name": "MyAppBackend"
                    }
                ],
                "frontendIPConfigurations":[
                    {
                        "name": "MyAppFrontendIP",
                        "properties":{
                            "publicIPAddress":{
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appgwIp'))]"
                            }
                        }
                    }
                ],
                "sslCertificates":[
                    {
                        "name": "MyAppCert",
                        "properties":{
                            "data": "[parameters('appgwPFX')]",
                            "password": "[parameters('appgwPFXPassword')]"
                        }
                    }
                ],
                "frontendPorts":[
                    {
                        "name": "MyAppPort",
                        "properties":{
                            "port": 80
                        }
                    },
                    {
                        "name": "MyAppPortSSL",
                        "properties":{
                            "port": 443
                        }
                    }
                ],
                "backendHttpSettingsCollection":[
                    {
                        "name": "spabackend",
                        "properties":{
                            "port": 8080,
                            "protocol":"Http"                        }
                    },
                    {
                        "name": "todobackend",
                        "properties":{
                            "port": 8081,
                            "protocol":"Http"                        }
                    }
                ],
                "httpListeners":[
                    {
                        "name": "MyAppListener",
                        "properties":{
                            "protocol":"Http",
                            "frontendIPConfiguration":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appgw'), 'MyAppFrontendIP')]"
                            },
                            "frontendPort":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appgw'), 'MyAppPort')]"
                            }
                        }
                    },
                    {
                        "name": "MyAppListenerSSL",
                        "properties":{
                            "protocol":"Https",
                            "frontendIPConfiguration":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appgw'), 'MyAppFrontendIP')]"
                            },
                            "frontendPort":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appgw'), 'MyAppPortSSL')]"
                            },
                            "sslCertificate":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('appgw'), 'MyAppCert')]"
                            }
                        }
                    }
                ],
                "requestRoutingRules":[
                    {
                        "name": "MyAppRule",
                        "properties":{
                            "ruleType":"PathBasedRouting",
                            "httpListener":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appgw'), 'MyAppListener')]"
                            },
                            "urlPathMap":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps', variables('appgw'), 'MyApp')]"
                            }
                        }
                    },
                    {
                        "name": "MyAppRuleSSL",
                        "properties":{
                            "ruleType":"PathBasedRouting",
                            "httpListener":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appgw'), 'MyAppListenerSSL')]"
                            },
                            "urlPathMap":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps', variables('appgw'), 'MyApp')]"
                            }
                        }
                    }
                ],
                "urlPathMaps":[
                    {
                        "name": "MyApp",
                        "properties":{
                            "defaultBackendAddressPool":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appgw'), 'MyAppBackend')]"
                            },
                            "defaultBackendHttpSettings":{
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appgw'), 'spabackend')]"
                            },
                            "pathRules":[
                                {
                                    "name": "todo",
                                    "properties":{
                                        "backendAddressPool":{
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appgw'), 'MyAppBackend')]"
                                        },
                                        "backendHttpSettings":{
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appgw'), 'todobackend')]"
                                        },
                                        "paths":[
                                            "/api/todo"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmNsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "comments": "Network Security Group (NSG) for your Primary NIC",
            "properties": {
              "securityRules": [
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vm')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-10-01",
            "dependsOn": [
                "[concat('Microsoft.Network/applicationGateways/', variables('appgw'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmNsg'))]"
            ],
            "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": "[parameters('vmcount')]"
            },
            "properties": {
                "upgradePolicy": {
                "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile":{
                        "imageReference": {
                            "publisher": "OpenLogic",
                            "offer": "CentOS",
                            "sku": "7.6",
                            "version": "latest"
                        },
                        "osDisk":{
                            "createOption":"FromImage",
                            "managedDisk":{
                                "storageAccountType":"Premium_LRS"
                            }
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[parameters('vm')]",
                        "adminUsername": "[parameters('username')]",
                        "linuxConfiguration": "[variables('linuxConfiguration')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('vmNic')]",
                                "properties": {
                                    "primary": true,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNsg'))]"
                                    },                    
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('vmNic'),'-ipconfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetAppName'))]"
                                                },
                                                "applicationGatewayBackendAddressPools":[
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appgw'), 'MyAppBackend')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "myappext",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[parameters('artifactsLocation')]"
                                        ],
                                        "commandToExecute": "[concat('sudo bash install.sh \"',variables('postgresurl'),'\" \"',parameters('acrname'),'\" \"',parameters('acrkey'),'\" \"',parameters('acrimgspa'),'\" \"',parameters('acrimgtodo'),'\"')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "sku": "[variables('postgresSKU')]",
            "kind":"",
            "name":"[parameters('postgrename')]",
            "apiVersion": "2017-12-01",
            "location":"[parameters('location')]",
            "properties": {
                "version": "[variables('postgresVersion')]",
                "administratorLogin": "[parameters('postgreuser')]",
                "administratorLoginPassword": "[parameters('postgrepassword')]",
                "sslEnforcement": "Disabled",
                "createMode": "Default"
            },
            "resources": [
                {
                  "type":"firewallRules",
                  "apiVersion": "2017-12-01",
                  "dependsOn": [
                      "[concat('Microsoft.DBforPostgreSQL/servers/', parameters('postgrename'))]"
                  ],
                  "location": "[parameters('location')]",
                  "name": "AllowAzureIPs",
                  "properties": {
                      "startIpAddress": "0.0.0.0",
                      "endIpAddress": "0.0.0.0"
                  }
              },
                {
                    "name": "[variables('postgresDB')]",
                    "type": "databases",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "charset": "utf8",
                        "collation": "English_United States.1252"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforPostgreSQL/servers/', parameters('postgrename'))]"
                    ]
                }
            ]
        }                  
    ],
    "outputs": {}
  }
  